#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Clear Workspace
rm(list = ls())
#Source files
source('./libraries.R')
source('./functions.R')
ticker <- 'MSFT'
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
#geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
histogram(data$Strat1Ret, 'Long/Short Strategy Daily Returns', 'Strat1Ret')
histogram(data$Strat1Ret - data$BenchmarkRet, 'Excess Daily Returns', 'Excess Returns')
histogram(data$BenchmarkRet, 'Benchmark Return', 'BenchmarkRet')
histogram(data$Strat1Ret, 'Long/Short Strategy Daily Returns', 'Strat1Ret')
#Clear Workspace
rm(list = ls())
#Source files
source('./libraries.R')
source('./functions.R')
ticker <- 'AMZN'
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
#Clear Workspace
rm(list = ls())
#Source files
source('./libraries.R')
source('./functions.R')
ticker <- 'AAPL'
#Clear Workspace
rm(list = ls())
#Source files
source('./libraries.R')
source('./functions.R')
ticker <- 'AAPL'
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
max(data$Strat1Ret)
min(data$Strat1Ret)
#Clear Workspace
rm(list = ls())
#Source files
source('./libraries.R')
source('./functions.R')
ticker <- 'AAPL'
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#Remove outliers abd clean
#Remove outliers for R13
data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
#Note
data <- data[Strat1Ret > mean(Strat1Ret) - 2*sd(Strat1Ret) & Strat1Ret < mean(Strat1Ret) + 2*sd(Strat1Ret)]
data[, Strat1Ret]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
#Note
data <- data[Strat1Ret > mean(Strat1Ret) - 2*sd(Strat1Ret) & Strat1Ret < mean(Strat1Ret) + 2*sd(Strat1Ret)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
#Clear Workspace
rm(list = ls())
#Source files
source('./libraries.R')
source('./functions.R')
ticker <- 'XOM'
#Load Data
load('../Data/master.Rda')
data <- master[Ticker == ticker]
rm(master)
data[, Ticker := NULL]
#Master data file
data <- na.omit(data)
data <- data[order(Date)]
#Remove outliers abd clean
#Remove outliers for R13
#data <- data[Vol > mean(Vol) - 2*sd(Vol) & Vol < mean(Vol) + 2*sd(Vol)]
#Combined Columns for 2-variable interaction and higher order terms
#Note: We need to manually create these variables - simply writing X1*X2 in formula won't work
#data[, c('R1_V1', 'R5_V5') := list(R1 * V1, R5 * V5)]
#TODO: Check Xi^2 effects
#R13 = B0 + B1*R1 + B2*R2 + ... + B12*R12
formula <- paste("R13 ~", paste(setdiff(retCols, 'R13'), collapse = " + "))
model <- lm(formula, data = data)
summary(model)
#[Date <= '2014-01-01']
## Newey West Robust T-statistic
#Note: This will not effect R^2 or coefficients - provides adjusted t-statistic
print('Newey West Robust T-statistic')
neweyWest <- coeftest(model, vcov = vcovHC(model))
print(neweyWest)
alphaToEnter <- .08
bestVars <- neweyWest[, 4]
bestVars <- bestVars[bestVars < alphaToEnter] #5% significance
if(length(bestVars[bestVars < alphaToEnter]) < 1) {
bestVars <- c('R1')
} else {
bestVars <- names(bestVars[bestVars < alphaToEnter])
}
bestVars <- bestVars[bestVars != "(Intercept)"]
#Long/Short Strategy
#Predict value
data[, Strat1Signal := predict(model)]
data[, Strat1Ret := ifelse(Strat1Signal > 0, R13, -R13)]
#Note
data <- data[Strat1Ret > mean(Strat1Ret) - 2*sd(Strat1Ret) & Strat1Ret < mean(Strat1Ret) + 2*sd(Strat1Ret)]
data[, Strat1CumRet := cumprod(1 + Strat1Ret)]
#Random Strategy
data[, RandomSignal := rbinom(.N, 1, .5)]
data[, RandomRet := ifelse(Strat1Signal == 1, R13, -R13)]
data[, RandomCumRet := cumprod(1 + RandomRet)]
#Benchmark Hold Strategy
data[, BenchmarkRet := Close / shift(Close) - 1]
data[is.na(BenchmarkRet), BenchmarkRet := 0]
data[, BenchmarkCumRet := cumprod(1 + BenchmarkRet)]
#Plot strategies
data <- data[order(Date)]
plot <- ggplot() +
geom_line(data = data, aes(x = Date, y = BenchmarkCumRet, colour = 'Benchmark Long Strategy')) +
geom_line(data = data, aes(x = Date, y = Strat1CumRet, colour = 'Long/Short Strategy')) +
geom_line(data = data, aes(x = Date, y = RandomCumRet, colour = 'Random Strategy')) +
xlab('Dates') + ylab('Return') + ggtitle('Strategy Return')
plot(plot)
